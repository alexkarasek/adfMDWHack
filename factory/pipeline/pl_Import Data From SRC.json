{
	"name": "pl_Import Data From SRC",
	"properties": {
		"activities": [
			{
				"name": "Copy Table To ADLS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Low Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get High Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[Integration].[GetUpdates]",
						"storedProcedureParameters": {
							"LastCutoff": {
								"type": "String",
								"value": {
									"value": "@{activity('Get Low Watermark').output.firstRow.CutoffTime}",
									"type": "Expression"
								}
							},
							"NewCutoff": {
								"type": "String",
								"value": {
									"value": "@{activity('Get High Watermark').output.firstRow.load_date}",
									"type": "Expression"
								}
							},
							"TableName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TableName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SourceTable",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "TargetFile",
						"type": "DatasetReference",
						"parameters": {
							"FileName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Stage Data",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy Table To ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "@concat('[Integration].[Ingest', replace(pipeline().parameters.TableName,' ',''), 'Data]')",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "TargetASA",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Load Data",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Create Lineage Key",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "@concat('[Integration].[MigrateStaged',replace(pipeline().parameters.TableName, ' ', ''),'Data]')",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "TargetASA",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Low Watermark",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Prep Target Directory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "@concat('execute integration.getlastetlcutofftime ''', pipeline().parameters.TableName,'''\nWITH RESULT SETS (\n(\n[Cutoff Time] nvarchar(50)\n)\n\n)')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "TargetASA",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get High Watermark",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Prep Target Directory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": "select cast(load_date as nvarchar(50)) load_date\nfrom integration.load_control",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "TargetASA",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Prep Target Directory",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_ArchiveFiles",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"TableName": {
							"value": "@pipeline().parameters.TableName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Archive Flat Files",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Load Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_ArchiveFiles",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"TableName": {
							"value": "@pipeline().parameters.TableName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Create Lineage Key",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Stage Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Integration].[CreateLineageKey]",
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "TargetASA",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "string"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}